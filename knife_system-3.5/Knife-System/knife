#!/bin/bash

############################### Informações #########################################
# Autor: Anônimo000                                                                 #
# Data: 05/02/2016                                                                  #
# Descrição: Para inúmeras finalidades descritas no site                            #
# Versão: 3.4                                                                       #
# Data de modificação: 1/03/2016                                                   #
# OS: Apenas para derivados do Debian.                                              #
#                                                                                   #
# Reporte os erros que encontrar para o email abaixo                                #
# Não retire os devidos créditos                                                    #
# Site: knifesystem.com.br                                                           #
# Página no face: https://facebook.com/knifesystem                                  #
# Comunidade: https://plus.google.com/communities/107206313729931554307             #
# Parceiros: http://www.goscripts.net - GoScripts                                   #
#            https://brasilblackhat.com.br - Brasil Black Hat                       #
#####################################################################################
source assets/variaveis.sh
########################################################
#                menu principal                        #
########################################################
echo -e "${azul}Verificando sua conexão...${NORMAL}"
ping -c1 google.com > /dev/null
if [ $? == 0 ];then
   meuEnderecoIp=`curl -s https://wtfismyip.com/text`
   echo -e "${verde}Conectado${NORMAL}"
   sleep 1
   echo ""
else
   meuEnderecoIp=`echo -e "${verm}Não conectado${NORMAL}"`
   echo -e "${verm}Não conectado a internet${NORMAL}"
   sleep 1
   echo ""
fi
      if [ -e $pastaLogs ];then
            echo "" > /dev/null
      else 
            mkdir $pastaLogs
      fi
function menu {
echo -e $verm "====================================== ${NORMAL}"
sleep 0.1
echo -e $amarelo "            Knife System             ${NORMAL}"
sleep 0.1
echo -e $verm" ====================================== ${NORMAL}"
echo -e "${branco} http://knifesystem.com.br          $versaoKS"
echo ""
menu-item "A" "Instalar programas"
menu-item "B" "Remover programas"
menu-item "C" "Procurar programas"
menu-item "D" "Reparar e limpar"
menu-item "E" "Usando o git de forma fácil"
menu-item "F" "Lista de programas"
menu-item "G" "Arquivos"
menu-item "H" "Aparência"
menu-item "I" "Segurança"
menu-item "J" "Informações diversas"
menu-item "K" "Baixar arquivos"

echo ""
menu-item 1 "Atualizar script"
menu-item 2 "Sair"
echo -e "${branco}------------------------------${NORMAL}"
echo -e "${branco}Informe a opção desejada:${NORMAL}"

read -n1 opcaoMenu 
}


########################################################
#               Funções do menu principal              #
########################################################

##### Instalar programas #####

source assets/funcoes/instalar-programas.sh

###### Remover programas #####

source assets/funcoes/remover-programas.sh

###### Repara dependências #####

source assets/funcoes/reparar-erros.sh

###### Procurar programas e instalar extras #####

source assets/funcoes/procurar-programas.sh


###### Procurar arquivos, criptografar e descriptografar #####

source assets/funcoes/arquivos-criptografar-acha.sh

###### Github para iniciantes ######

source assets/funcoes/github-iniciantes.sh

########### Aparência, personalizar ícones, temas, conky e terminal ##########

source assets/funcoes/personalizacao.sh

############# Segurança, firewall, anonimato, etc ##################

source assets/funcoes/segurança-firewall-anonimato.sh

########## Informações do hardware e etc.... #################

source assets/funcoes/informacoes-hardware-software-rede.sh

##### Download de arquivos ##############

source assets/funcoes/baixar-arquivos-online.sh


### Funções para instalar os programa que estão em armazenados online pelo KS

source assets/funcoes/programas-onlines-instalar.sh


# Função que serve para atuzalizar o script Knife System para versão mais recente
function atualizar-script-ks() {
  echo -e "${ciano}Atualizando script aguarde...${NORMAL}"
  echo ""
  wget https://github.com/anony000/knife_system/knifesystem.deb
  dpkg -i knifesystem.deb | pv -W > $pastaLogs/$horarioAtual-debug.log
  apt-get -f -y --foce-yes install
  if [ $? == 0 ];then
    clear
    echo -e "${verde}Atualização concluída!${NORMAL}"
    sleep 1
    rm knifesystem.deb
  else
    echo -e "${verm}Erro na atualização, para mais informações confira em ${pastaLogs}"
    sleep 1
    fazer
  fi
}


######################################
#      Setar os comandos do menu     #
#####################################
function fazer() {
  reset
  menu
while [ opcaoMenu != '' ]
    do

    case $opcaoMenu in
      A | a)reset;
            instalar-pacotes;
            menu;
            ;;
            B | b)reset;
                  remover-programas;
                  menu;
                  ;;

                  C | c)reset;
                        encontrar-programas;
                        menu;
                        ;;

                        D | d)reset;
                              reparar-pacotes-sistema;
                              menu;
                              ;;

                              E | e)reset;
                                    github-ajuda-iniciantes;
                                    menu;
                                    ;;

                                    F | f)reset;
                                          programas;
                                          menu;
                                          ;;

                                          G | g)reset;
                                                tarefas-arquivos;
                                                menu;
                                                ;;

                                                H | h)reset;
                                                      aparencia;
                                                      menu;
                                                      ;;

                                                      I | i)reset;
                                                            seguranca;
                                                             menu;
                                                            ;;

                                                            J | j)reset;
                                                                  informacoes-sistema;
                                                                  menu;
                                                                  ;;

                                                                  K | k)reset;
                                                                        baixar-arquivos-online;
                                                                        menu;
                                                                        ;;



          1) reset;
             atualizar-script-ks;
             exit;
             ;;

          0)reset;
           echo -e "${ciano}Até mais${NORMAL}"
           exit;
           ;;

     *) reset;
        menu;
        ;;
    esac
done
}

if [ `whoami` == "root" ]; then
	fazer;
else
    echo ""
	echo -e $verm "Você precisa ser root digite sua senha e tente novamente${NORMAL}"
    sudo su
fi
